KDL::DipMaker
  #stage
    copies the AIP to the DIPs directory
    opens the METS file in place
  #generate_tiles
    create tiles files and removes master files if the METS file is loaded
    updates the METS file with tile files (removing master representations) if the METS file is loaded
    outputs an error message if the METS file is not loaded
    outputs an error message if no tiler object is provided
  #build
    stages construction of the DIP
    produces tiles for each master file
    outputs the location of the DIP on success
    outputs the usage note when the AIP directory is omitted
    outputs the usage note when the DIPs directory is omitted
    skips the usage note when all arguments are provided
  #usage
    outputs a short usage note
KDL::Tiler
  #command
    sets the --input-directory option
    sets the --output-directory option
    sets the --no-move option
    sets the --delete option
    sets the --quiet option
    allows the --file option
    produces an entire command string
  #run
    when no explicit initialization is peformed
      sends an error message to output
      does not actually run the external tiler program
    when full initialization is performed
      actually runs the external tiler program
      does not send an error message to output
KDL::Page
  Export
    #save
      serializes page_fields to a JSON file in the specified directory
    #page_fields
      creates a hash of fields common to all pages
      includes all solr_doc fields for the first page
      only includes specified fields for subsequent pages
  Page-specific metadata
    label_display
      delegates to METS
    sequence_number_display
      delegates to METS
    text_href
      delegates to METS
    #id
      constructs an identifier for an individual page
    #text
      retrieves the text from the DIP directory
KDL::AccessPackage
  Dublin Core access
    dc_contributor
      returns a list of all <dc:contributor> elements from input
    dc_coverage
      returns a list of all <dc:coverage> elements from input
    dc_creator
      returns a list of all <dc:creator> elements from input
    dc_date
      returns a list of all <dc:date> elements from input
    dc_description
      returns a list of all <dc:description> elements from input
    dc_format
      returns a list of all <dc:format> elements from input
    dc_identifier
      returns a list of all <dc:identifier> elements from input
    dc_language
      returns a list of all <dc:language> elements from input
    dc_publisher
      returns a list of all <dc:publisher> elements from input
    dc_relation
      returns a list of all <dc:relation> elements from input
    dc_rights
      returns a list of all <dc:rights> elements from input
    dc_source
      returns a list of all <dc:source> elements from input
    dc_subject
      returns a list of all <dc:subject> elements from input
    dc_title
      returns a list of all <dc:title> elements from input
    dc_type
      returns a list of all <dc:type> elements from input
  METS file access
    #repository
      delegates to the METS object
    #date_digitized
      delegates to the METS object
    #ids
      delegates to the METS object
    #pages
      returns an array of Page objects
  package information
    #identifier
      returns the package identifier for the DIP
KDL::SolrMaker
  command-line interface
    #help
      outputs a short usage note
  METS header fields
    #repository_s
      delegates to AccessPackage
    #date_digitized_display
      delegates to AccessPackage
  Dublin Core fields
    fetching
      delegates fetching <dc:contributor> to AccessPackage
      delegates fetching <dc:coverage> to AccessPackage
      delegates fetching <dc:creator> to AccessPackage
      delegates fetching <dc:date> to AccessPackage
      delegates fetching <dc:description> to AccessPackage
      delegates fetching <dc:format> to AccessPackage
      delegates fetching <dc:identifier> to AccessPackage
      delegates fetching <dc:language> to AccessPackage
      delegates fetching <dc:publisher> to AccessPackage
      delegates fetching <dc:relation> to AccessPackage
      delegates fetching <dc:rights> to AccessPackage
      delegates fetching <dc:source> to AccessPackage
      delegates fetching <dc:subject> to AccessPackage
      delegates fetching <dc:title> to AccessPackage
      delegates fetching <dc:type> to AccessPackage
    KDL Solr fields with only one occurrence allowed
      #title_t
        delegates fetching title_t to AccessPackage
      #title_display
        delegates fetching title_display to AccessPackage
      #author_t
        delegates fetching author_t to AccessPackage
      #author_display
        delegates fetching author_display to AccessPackage
      #publisher_t
        delegates fetching publisher_t to AccessPackage
      #publisher_display
        delegates fetching publisher_display to AccessPackage
      #format_facet
        delegates fetching format_facet to AccessPackage
      #description_t
        delegates fetching description_t to AccessPackage
      #description_display
        delegates fetching description_display to AccessPackage
      #type_display
        delegates fetching type_display to AccessPackage
      #usage_display
        delegates fetching usage_display to AccessPackage
      #language_facet
        delegates fetching language_facet to AccessPackage
      #date_facet
        delegates fetching date_facet to AccessPackage
      #relation_display
        delegates fetching relation_display to AccessPackage
    KDL Solr fields with multiple occurrences allowed
      #subject_topic_facet
        delegates to AccessPackage
  Index-specific fields
    #parent_id_s
      delegates to AccessPackage
  Export
    #build
      passes save to each page
    #solr_doc
      creates a hash of fields common to all pages
    #pages
      delegates to AccessPackage
KDL::METS
  #load
    loads a METS file into memory
  #save
    makes a backup copy
    does not change the METS file if nothing has changed
    marks the file as unchanged
  #ids
    fetches the list of fileGrp identifiers
  #add_file
    adds the right file to the correct fileGrp in the fileSec
    actually updates the METS file with the right file in the correct fileGrp
    adds a file to the correct div in the structMap
    marks the METS file as changed
  #remove_file
    removes a file from the correct fileGrp in the fileSec
    removes a file from the correct div in the structMap
    marks the METS file as changed
  #file
    returns the file for a given group and use
  #href
    returns the file location for a given group and use
  #file_id
    returns the file ID for a given group and use
  #dublin_core
    retrieves the Dublin Core metadata from the document
  #repository
    returns the repository
  #date_digitized
    returns the date digitized
  item-level metadata
    #sequence_number
      returns the sequence number for a given id
    #label
      returns the label for a given id
    #text_href
      returns the text location for a given id
KDL::AipMaker
  #build
    builds the AIP in the requested directory
    returns a valid Bag in the BagIt format
    returns a Bag whose data directory matches the contents of the SIP
    checks whether the checksums in the Bag match the contents of the SIP
    returns a Bag whose checksums match the contents of the SIP
    outputs the location of the AIP on success
    outputs the usage note when the directory for AIPs is omitted
    outputs the usage note when the identifier is omitted
    outputs the usage note when the SIP location is omitted
  #check_fixity
    checks internal fixity of the AIP and compares with the SIP
    outputs an error when SIP and AIP diverge
    outputs an error when AIP fails fixity check
  #usage
    outputs a short usage note
  #cleanup!
    clears out the AIP directory

Finished in 6.098858 seconds

125 examples, 0 failures
